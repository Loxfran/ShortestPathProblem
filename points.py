import copy

"""
points = {
	(-200, 200):[(-100, 200), (-200, 100)],
	(-100, 200):[(-200, 200), (-100, 100), (0, 200)],
	(0, 200):[(-100, 200), (0, 100), (100, 200)],
	(100, 200):[(0, 200), (100, 100), (200, 200)],
	(200, 200):[(100, 200), (200, 100)],

	(-200, 100):[(-200, 200), (-100, 100), (-200, 0)],
	(-100, 100):[(-200, 100), (-100, 200), (0, 100), (-100, 0)],
	(0, 100):[(-100, 100), (0, 200), (100, 100), (0,0)],
	(100, 100):[(0, 100), (100, 200), (200, 100), (100, 0)],
	(200, 100):[(100, 100), (200, 200), (200, 0)],

	(-200, 0):[(-200, 100), (-100, 0), (-200, -100)],
	(-100, 0):[(-200, 0), (-100, 100), (0, 0), (-100, -100)],
	(0, 0):[(-100, 0), (0, 100), (100, 0), (0, -100)],
	(100, 0):[(0, 0), (100, 100), (200, 0), (100, -100)],
	(200, 0):[(100, 0), (200, 100), (200, -100)],

	(-200, -100):[(-200, -200), (-100, -100), (-200, 0)],
	(-100, -100):[(-200, -100), (-100, -200), (0, -100), (-100, 0)],
	(0, -100):[(-100, -100), (0, -200), (100, -100), (0,0)],
	(100, -100):[(0, -100), (100, -200), (200, -100), (100, 0)],
	(200, -100):[(100, -100), (200, -200), (200, 0)],

	(-200, -200):[(-100, -200), (-200, -100)],
	(-100, -200):[(-200, -200), (-100, -100), (0, -200)],
	(0, -200):[(-100, -200), (0, -100), (100, -200)],
	(100, -200):[(0, -200), (100, -100), (200, -200)],
	(200, -200):[(100, -200), (200, -100)]
}
"""

def GeneratePoints(n):
	points = {}
	for i in range(n):
		for j in range(n):
			points[(i*100, j*100)] = [(i*100, j*100+100), (i*100+100, j*100), (i*100, j*100-100), (i*100-100, j*100)]
	for i in range(n):
		for j in range(n):
			points[(i*100, -j*100)] = [(i*100, -j*100+100), (i*100+100, -j*100), (i*100, -j*100-100), (i*100-100, -j*100)]
	for i in range(n):
		for j in range(n):
			points[(-i*100, j*100)] = [(-i*100, j*100+100), (-i*100+100, j*100), (-i*100, j*100-100), (-i*100-100, j*100)]
	for i in range(n):
		for j in range(n):
			points[(-i*100, -j*100)] = [(-i*100, -j*100+100), (-i*100+100, -j*100), (-i*100, -j*100-100), (-i*100-100, -j*100)]
	n_1 = n - 1
	for i in range(n):
		points[(i*100, (n_1+1)*100)] = [(i*100, (n_1*100))]
		points[(-i*100, (n_1+1)*100)] = [(-i*100, (n_1*100))]
		points[(i*100, -(n_1+1)*100)] = [(i*100, -(n_1*100))]
		points[(-i*100, -(n_1+1)*100)] = [(-i*100, -(n_1*100))]  
	for j in range(n):
		points[((n_1+1)*100, j*100)] = [(n_1*100, j*100)] 
		points[((n_1+1)*100, -j*100)] = [(n_1*100, -j*100)] 
		points[(-(n_1+1)*100, j*100)] = [(-n_1*100, j*100)] 
		points[(-(n_1+1)*100, -j*100)] = [(-n_1*100, -j*100)]
	# points_temp = copy.deepcopy(points)
	# for point in points_temp:
	# 	for next_point in points_temp[point]:
	# 		if next_point not in points:
	# 			points[next_point] = []
	return points
# points = GeneratePoints(3)
if __name__ == "__main__":
	points = GeneratePoints(3)
	print(points)
	print(len(points))